# Local version of the container build workflow for act testing
# This workflow directly includes the steps from the reusable workflow
# to work around act's limitations with remote reusable workflows

name: Local Container Build

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push image to registry"
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Protect existing repositories
        run: |
          echo "üõ°Ô∏è Checking for existing repositories..."
          for dir in containers actions dot-github style-system; do
            if [ -d "$dir" ] && [ -n "$(ls -A $dir 2>/dev/null)" ]; then
              echo "‚ö†Ô∏è  WARNING: $dir exists and contains files"
              echo "Creating safety marker..."
              touch "$dir/.act-protect"
            fi
          done

      - name: Checkout containers repository
        run: |
          # Manual checkout to avoid actions/checkout destructive behavior
          if [ -d "containers/.git" ]; then
            echo "‚úÖ containers repository already exists"
            cd containers
            git fetch origin main
            git checkout main
            git pull origin main
          else
            echo "üì¶ Cloning containers repository"
            git clone https://github.com/braincraftio/containers.git containers
          fi

      - name: Checkout actions repository
        run: |
          # Manual checkout to avoid actions/checkout destructive behavior
          if [ -d "actions/.git" ]; then
            echo "‚úÖ actions repository already exists"
            cd actions
            git fetch origin main
            git checkout main
            git pull origin main
          else
            echo "üì¶ Cloning actions repository"
            git clone https://github.com/braincraftio/actions.git actions
          fi

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to GitHub Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/braincraftio/containers
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=devcontainer-latest,enable={{is_default_branch}}
            type=sha,prefix=devcontainer-

      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./containers/devcontainer
          file: ./containers/devcontainer/Dockerfile
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/braincraftio/containers:devcontainer-latest
          cache-to: |
            type=gha,mode=max
            type=inline
          outputs: type=docker,dest=/tmp/devcontainer.tar

      - name: Load image
        run: |
          docker load < /tmp/devcontainer.tar
          docker images

      - name: Test image
        run: |
          # Basic smoke test
          docker run --rm ghcr.io/braincraftio/containers:devcontainer-latest mise --version

      - name: Summary
        run: |
          {
            echo "## Local Container Build Summary"
            echo ""
            echo "‚úÖ **Image Built Successfully**"
            echo "- Tags:"
            echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
              echo "  - \`${tag}\`"
            done
            echo ""
            echo "- Platforms: linux/amd64 (local build)"
          } >> "$GITHUB_STEP_SUMMARY"
