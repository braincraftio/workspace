#!/usr/bin/env bash

# Custom tree command wrapper for braincraftio/workspace repository
# Shows all files including hidden ones while filtering out unnecessary directories
#
# Usage examples:
#   tree             - Show repository with defaults
#   tree -L 1        - Show only top-level directories and files
#   tree app         - Show only the app directory structure
#   tree -d          - Show only directories
#   tree --du        - Show disk usage for directories
#   tree -P "*.go"   - Show only Go files
#   tree -f          - Show full path for each file

# Function to find the tree command
find_tree_command() {
    # Try common locations first
    local tree_locations=(
        "/opt/homebrew/bin/tree"
        "/usr/bin/tree"
    )

    # Check specific locations first
    for location in "${tree_locations[@]}"; do
        if [ -x "$location" ]; then
            echo "$location"
            return 0
        fi
    done

    # Fall back to searching PATH if not found in specific locations
    # SC2155: Declare and assign separately to avoid masking return values
    # This ensures we can check the exit status of the command pipeline
    # https://www.shellcheck.net/wiki/SC2155
    local path_tree
    path_tree=$(which tree 2>/dev/null | grep -v ".github/bin/tree")

    if [ -n "$path_tree" ]; then
        echo "$path_tree"
        return 0
    fi

    # Not found
    return 1
}

# Find and set tree command
TREE_CMD=$(find_tree_command)
if [ -z "$TREE_CMD" ]; then
    echo "Error: tree command not found. Please install tree first."
    exit 1
fi

# Pattern to exclude common temporary directories and build artifacts
# Aligned with .gitignore and common development artifacts
EXCLUDE_PATTERN=".npm-global|.ruff_cache|vendor|node_modules|.git|venv|dist|__debug*|.artifacts|coverage|*.data|*test-archive|.env|.claude|.gemini|.vscode|.devcontainer"

# Set default depth limit (can be overridden with -L flag)
DEPTH_LIMIT=""
if [[ ! "$*" =~ "-L" ]]; then  # Only set default if -L isn't already provided
    DEPTH_LIMIT="-L 4"  # Default to 4 levels deep
fi

# Execute tree with preferred options
# We don't quote $DEPTH_LIMIT because it contains the flag and value (-L 4)
# that need to be treated as separate arguments
# shellcheck disable=SC2086
if [ -n "$DEPTH_LIMIT" ]; then
    $TREE_CMD \
        -a \
        -h \
        -F \
        -C \
        -I "$EXCLUDE_PATTERN" \
        --prune \
        --dirsfirst \
        $DEPTH_LIMIT \
        "$@"
else
    $TREE_CMD \
        -a \
        -h \
        -F \
        -C \
        -I "$EXCLUDE_PATTERN" \
        --prune \
        --dirsfirst \
        "$@"
fi
