# BrainCraft.io Workspace Configuration
# Minimal root that loads modular components

# Mise automatically discovers and loads configuration from these locations:
#
# Configuration Files (.config/mise/conf.d/):
# - 00-env.toml       Environment variables and paths
# - 00-tools.toml     Tool versions (go, node, python, etc.)
# - 00-vars.toml      Task variables (build flags, test settings)
#
# Executable Tasks (.config/mise/tasks/):
# - doctor-workspace      Health check for workspace (`mr dr`)
# - git                  Repository operations wrapper
# - exec                 Execute commands across repos
# - lint-bash-shellcheck Shellcheck wrapper
# - lint-bash-dead-code  Dead code finder
#
# Shared Libraries (.config/mise/lib/):
# - common.sh        Reusable bash functions
# - workspace.sh     Repository operations from workspace.json


# Settings
[settings]
always_keep_download = true
legacy_version_file = true
task_output = "prefix"
jobs = 4

# Task aliases
[alias]
i = "install"
b = "build"
t = "test"
# l = "lint"  # Removed - conflicts with lint task
f = "format"
g = "git"
x = "exec"
d = "doctor"

# Core tasks
[tasks.setup]
description = "Initial workspace setup and configuration"
depends = ["setup:tools", "setup:repos", "setup:hooks", "git:setup"]
alias = ["s", "init"]

[tasks."setup:tools"]
description = "Install all required tools"
run = "mise install"

[tasks."setup:repos"]
description = "Clone all child repositories"
run = "mise run git:clone"

[tasks."setup:hooks"]
description = "Install git hooks (pre-commit)"
run = "pre-commit install --install-hooks"

[tasks."git:setup"]
description = "Configure Git user and credential helper"
run = "mise run git-setup"

[tasks."doctor:workspace"]
description = "Enterprise-grade workspace health check with actionable fixes"
run = "mise run doctor-workspace"
alias = ["dr", "doctor"]

# Linting tasks
[tasks.lint]
description = "Run all linters across the polyglot workspace"
depends = ["lint:bash"]

[tasks."lint:bash"]
description = "Run all bash linters and quality checks"
depends = ["lint:bash:shellcheck", "lint:bash:dead-code"]

[tasks."lint:bash:shellcheck"]
description = "Lint bash scripts with shellcheck for style and errors"
run = "mise run lint-bash-shellcheck"
alias = ["shellcheck"]

[tasks."lint:bash:dead-code"]
description = "Find unused functions in bash scripts"
run = "mise run lint-bash-dead-code"
alias = ["dead", "unused"]

# Git tasks
[tasks."git:status"]
description = "Show git status across all repositories"
run = "mise run git status --porcelain"
alias = ["gs"]

[tasks."git:clone"]
description = "Clone all child repositories"
run = "mise run git clone"
alias = ["gc", "clone"]

[tasks."git:pull"]
description = "Pull latest changes for all repositories"
run = "mise run git pull"
alias = ["gp", "pull"]

[tasks."git:fetch"]
description = "Fetch updates for all repositories"
run = "mise run git fetch"
alias = ["gf", "fetch"]

[tasks."git:branch"]
description = "Show branches for all repositories"
run = "mise run git branch"
alias = ["gb"]

[tasks."git:log"]
description = "Show recent commits for all repositories"
run = "mise run git log --oneline -5"
alias = ["gl"]

# Pre-commit tasks
[tasks."pre-commit:install"]
description = "Install pre-commit hooks for the workspace"
run = "pre-commit install --install-hooks"
alias = ["pci"]

[tasks."pre-commit:run"]
description = "Run pre-commit checks on all files"
run = "pre-commit run --all-files"
alias = ["pc", "precommit"]

[tasks."pre-commit:run:staged"]
description = "Run pre-commit checks on staged files only"
run = "pre-commit run"
alias = ["pcs"]

[tasks."pre-commit:update"]
description = "Update pre-commit hooks to latest versions"
run = "pre-commit autoupdate"
alias = ["pcu"]

[tasks."pre-commit:clean"]
description = "Clean pre-commit cache"
run = "pre-commit clean && pre-commit gc"
alias = ["pcc"]
